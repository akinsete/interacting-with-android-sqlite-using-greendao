package com.appsng.greendaoapp.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.appsng.greendaoapp.db.User;
import com.appsng.greendaoapp.db.Request;
import com.appsng.greendaoapp.db.Asset;

import com.appsng.greendaoapp.db.UserDao;
import com.appsng.greendaoapp.db.RequestDao;
import com.appsng.greendaoapp.db.AssetDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig requestDaoConfig;
    private final DaoConfig assetDaoConfig;

    private final UserDao userDao;
    private final RequestDao requestDao;
    private final AssetDao assetDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        requestDaoConfig = daoConfigMap.get(RequestDao.class).clone();
        requestDaoConfig.initIdentityScope(type);

        assetDaoConfig = daoConfigMap.get(AssetDao.class).clone();
        assetDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        requestDao = new RequestDao(requestDaoConfig, this);
        assetDao = new AssetDao(assetDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Request.class, requestDao);
        registerDao(Asset.class, assetDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        requestDaoConfig.clearIdentityScope();
        assetDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public RequestDao getRequestDao() {
        return requestDao;
    }

    public AssetDao getAssetDao() {
        return assetDao;
    }

}
